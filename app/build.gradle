plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    namespace 'com.argumelar.quranmvvm'
    compileSdk 32

    defaultConfig {
        applicationId "com.argumelar.quranmvvm"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug{
            buildConfigField("String", 'BASE_URL', '"https://raw.githubusercontent.com/penggguna/QuranJSON/master/"')
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
        dataBinding = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'


    // navigation untuk perpindahan fragment
    def navigation_version = "2.5.2"
    //noinspection GradleDependency
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    //noinspection GradleDependency
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // lifecycle = livedata untuk room persistens database, viewmodel untuk desain pattern
    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // coroutines =  proses penyimpanan data pada database lokal maupun request API
    def coroutines_version = "1.6.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // retrofit = retrofit untuk request API, converter-gson untuk mengconvert data json ditampilkan di android
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // interceptor untuk monitoring request API
    def intercerptor_version = "4.10.0"
    implementation "com.squareup.okhttp3:logging-interceptor:$intercerptor_version"

    // room persistens atau database sqlite yg kita gunakan, kapt untuk compilernya
    def room_version = "2.4.3"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // koin = injection
    implementation "io.insert-koin:koin-android:3.2.2"
//    implementation "io.insert-koin:koin-androidx-viewmodel:$koin_version" //error
    implementation "io.insert-koin:koin-core:3.2.2"

    // glide untuk load gambar
    def glide_version = "4.14.2"
    implementation "com.github.bumptech.glide:glide:$glide_version"

    // Timber untuk mendapatkan Log
    implementation "com.jakewharton.timber:timber:5.0.1"

}